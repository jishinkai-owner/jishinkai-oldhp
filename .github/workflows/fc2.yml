name: Deploy Astro site to FC2

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "fc2"
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Build with Astro
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: ./dist

  deploy:
    environment:
      name: fc2
      url: 'https://${{ vars.FC2_DOMAIN }}/'
    needs: build
    runs-on: ubuntu-latest
    name: Deploy to FC2
    timeout-minutes: 120 # for first deploy
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: release
          path: ./dist
      - name: Sync with FC2
        id: deployment
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ vars.FC2_DOMAIN }}
          username: ${{ secrets.FC2_FTP_USERNAME }}
          password: ${{ secrets.FC2_FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: ./
          exclude: |
            .htaccess
            .fc2*
            google*.html
          security: strict
